version: '3'
services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  postgres_db:
    image: postgres:latest
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: diploma_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    volumes:
      - diploma_db_data:/var/lib/postgresql/data/
    ports:
      - "5435:5432"
    env_file:
      - .env

  web:
#    build: .
    image: dipl_app
    container_name: diploma_web
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "9000:8000"
    env_file:
      - .env
    volumes:
      - .:/app

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres_db
      - web
    env_file:
      - .env

volumes:
  diploma_db_data:
